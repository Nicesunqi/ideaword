<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                     http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                     http://www.springframework.org/schema/context
                     http://www.springframework.org/schema/context/spring-context.xsd
                     ">

	<context:property-placeholder location="classpath:application.properties" />

	<!-- 定义Hibernate Session工厂 -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="com.graphics" /><!-- 如果多个，用“,”分隔 -->
		<property name="hibernateProperties">
			<props>
				<!-- 像操作STRING一样操作CLOB -->
				<prop key="hibernate.connection.SetBigStringTryClob">true</prop>
				<prop key="hibernate.cache.use_second_level_cache">false</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="current_session_context_class">thread</prop>
				<!-- 通过注释创建表 <prop key="hibernate.hbm2ddl.auto">update</prop> -->

			</props>
		</property>
		<property name="namingStrategy">
			<bean class="org.hibernate.cfg.ImprovedNamingStrategy" />
		</property>
	</bean>

	<!-- 定义事务 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	

	<bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
	</bean>
	<bean id="wall-filter" class="com.alibaba.druid.wall.WallFilter">
		<property name="dbType" value="${jdbc.type}" />
	</bean>
	<!-- 数据源配置, 使用 BoneCP 数据库连接池 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<!-- 数据源驱动类可不写，Druid默认会自动根据URL识别DriverClass -->
		<property name="driverClassName" value="${jdbc.driver}" />

		<!-- 基本属性 url、user、password -->
		<property name="url" value="${cloudsky.db.url}" />
		<property name="username" value="${cloudsky.db.user}" />
		<property name="password" value="${cloudsky.db.password}" />

		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="5" />
		<property name="minIdle" value="5" />
		<property name="maxActive" value="${cloudsky.maxPoolSize}" />

		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="50000" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />

		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />

		<property name="validationQuery" value="${jdbc.validationQuery}" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />

		<!-- 超时回收会影响性能 -->
		<!-- 超过时间限制是否回收 -->
		<!--<property name="removeAbandoned" value="true" /> -->
		<!-- 超时时间；单位为秒。180秒=3分钟 -->
		<!--<property name="removeAbandonedTimeout" value="180" /> -->
		<!-- 关闭abanded连接时输出错误日志 -->
		<!--<property name="logAbandoned" value="true" /> -->

		<!-- <property name="proxyFilters"> <list> <ref bean="log-filter" /> </list> 
			</property> -->
		<!-- 打开PSCache，并且指定每个连接上PSCache的大小（Oracle使用） <property name="poolPreparedStatements" 
			value="true" /> <property name="maxPoolPreparedStatementPerConnectionSize" 
			value="20" /> -->

		<!-- 配置监控统计拦截的filters -->
		<!-- 监控统计拦截的filters,日志记录 edited by zhangpl 20140824 end -->
		<!--<property name="filters"> <value>stat</value> </property> -->
		<property name="proxyFilters">
			<list>
				<ref bean="stat-filter" />
				<!--<ref bean="wall-filter" /> -->
			</list>
		</property>
	</bean>

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>

</beans>